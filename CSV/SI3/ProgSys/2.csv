Quel est le rôle principal du système d'exploitation lors de l'exécution d'un programme ?,Gérer les périphériques d'entrée/sortie,Fournir une interface graphique,Allouer et gérer les ressources matérielles,Compiler le code source,Allouer et gérer les ressources matérielles,none
Sous Linux, quelle extension de fichier est généralement utilisée pour les bibliothèques dynamiques ?,.a,.so,.lib,.dll,.so,none
Qu'est ce qu'affiche ce programme ?,Le programme affiche "Parent process",Le programme affiche "Child process",Le programme affiche "Parent process" puis "Child process",Le programme affiche "Child process" puis "Parent process",On ne sait pas,On ne sait pas,https://i.postimg.cc/D0yMTP5y/parent-child-affichage.png
Combien d'affichages sont faits dans ce programme ?,Le programme affiche "Avant fork" deux fois, suivi de "Après fork" deux fois,Le programme affiche "Avant fork" une fois, suivi de "Après fork" deux fois,Le programme affiche "Avant fork" deux fois, suivi de "Après fork" une fois,Le comportement est imprévisible,Le programme affiche "Avant fork" une fois, suivi de "Après fork" deux fois,https://i.postimg.cc/6Qyg7cN7/avant-apres-fork.png
Complétez la ligne manquante dans le code : int valeur = 10; pthread_create(&thread, NULL, ma_fonction, _____),valeur,&valeur,&(void)valeur,(void *)&valeur,(void *)valeur,(void *)&valeur,none
Que se passe-t-il ici ?,Le programme principal attend la fin du thread,Les deux actions se déroulent en parallèle,Le programme se termine immédiatement,Les deux actions se déroulent en parallèle,https://i.postimg.cc/43QPxhYK/thread-wait.png
Que se passe-t-il ici ?,Le programme affiche "Variable partagée : 1" puis "Variable partagée : 2",Le programme affiche "Variable partagée : 2" puis "Variable partagée : 1",Le programme affiche "Variable partagée : 1" deux fois,Le programme affiche "Variable partagée : 2" deux fois,Le comportement est imprévisible,Le comportement est imprévisible,https://i.postimg.cc/vTFrsryx/var-partagee.png
Quel appel système POSIX ouvre un fichier en lecture seule ?,open(path, O_RDONLY),fopen(path, "r"),read(path, O_RDONLY),create(path, O_RDONLY),open(path, O_RDONLY),none
Quel appel système est utilisé pour rediriger la sortie standard vers un fichier ?,dup2(fd, STDOUT_FILENO),dup2(STDOUT_FILENO, fd),redirect(stdout, file),write(fd, STDOUT_FILENO),dup2(fd, STDOUT_FILENO),none
Que retourne l’appel à `open()` en cas d’échec ?,-1,0,NULL,errno,-1,none
Quelle est la différence entre read et fread ?,read utilise des descripteurs, fread utilise des FILE*,read est ANSI, fread est POSIX,read est pour les chaînes de caractères uniquement,fread ne peut pas être utilisé avec des fichiers binaires,read utilise des descripteurs, fread utilise des FILE*,none
Quel descripteur représente l’entrée standard (stdin) ?,0,1,2,3,0,none
Que fait lseek(fd, offset, SEEK_SET) ?,Déplace le curseur de lecture/écriture dans un fichier,Écrit à la position spécifiée dans le fichier,Déplace le fichier à l'offset donné,Change le mode d'ouverture du fichier,Déplace le curseur de lecture/écriture dans un fichier,none
Qu’est-ce que la mémoire virtuelle ?,Un espace d’adressage abstrait pour les processus,La mémoire RAM physique,Une technique de cache,Une partition disque,Une pile partagée,Un espace d’adressage abstrait pour les processus,none
Quelle est la principale utilité de la pagination mémoire ?,Diviser l’espace en blocs fixes,Assurer la sécurité entre processus,Éviter la fragmentation externe,Permettre l’accès concurrent,Simuler la RAM,Diviser l’espace en blocs fixes;Éviter la fragmentation externe,none
Que représente une table de pages ?,Une structure qui mappe les pages virtuelles vers la mémoire physique,Une table d’adresses IP,Une liste de fichiers,Un plan de segmentation,Un cache de disques,Une structure qui mappe les pages virtuelles vers la mémoire physique,none
Quel problème la segmentation tente-t-elle de résoudre ?,La flexibilité d'allocation mémoire,La lenteur du disque dur,Les erreurs de compilation,Les appels système bloquants,L’ordonnancement temps réel,La flexibilité d'allocation mémoire,none
Quels sont les avantages de la mémoire virtuelle ?,Isolation des processus,Utilisation efficace du disque,Chargement à la demande,Communication inter-processus,Détection de race conditions,Isolation des processus;Utilisation efficace du disque;Chargement à la demande,none
Quand survient un "page fault" ?,Quand une page demandée n’est pas en mémoire,Quand la mémoire est pleine,Quand un processus plante,Quand une page est illisible,Quand un segment est invalide,Quand une page demandée n’est pas en mémoire,none
Quel mécanisme associe adresse virtuelle et physique ?,La MMU (Memory Management Unit),Le BIOS,Le cache CPU,Le chargeur dynamique,Le compilateur,La MMU (Memory Management Unit),none
Que permet JNI dans une application Java ?,Exécuter du code natif C/C++,Appeler Java depuis du C uniquement,Écrire du code Android sans Java,Interpréter du bytecode manuellement,Transformer une classe en exécutable,Exécuter du code natif C/C++,none
Que faut-il respecter dans la déclaration d’une fonction native côté C ?,Nom avec Java_package_Class_method,Types strictement conformes,Ordre des paramètres JNIEnv* et jobject,Types compatibles avec JNI,Les quatre réponses,Les quatre réponses,none
Que permet la fonction `(*env)->GetStringUTFChars(env, jstring, NULL)` ?,Récupérer un `char*` depuis un `jstring`,Allouer un buffer Java,Renvoyer une erreur JNI,Créer une JVM,Renvoyer une string Java au C,Récupérer un `char*` depuis un `jstring`,none
Pourquoi utilise-t-on JNI ?,Pour améliorer les performances,Pour interagir avec des bibliothèques C,Pour accéder à des fonctions système natives,Pour éviter Java,Pour coder plus rapidement,Pour améliorer les performances;Pour interagir avec des bibliothèques C;Pour accéder à des fonctions système natives,none
Quel est le résultat de ce code ?,Erreur à l'exécution à cause d'une mauvaise signature,Le programme retourne 3,Le programme ne compile pas,Segfault,Erreur à l'exécution à cause d'une mauvaise signature,https://i.postimg.cc/WzpBbKS8/Question1.png
Quel est le comportement de ce code ?,GetMethodID retourne NULL, donc le message d'erreur est affiché,Le programme affiche 49,Le programme plante,La méthode retourne 0,GetMethodID retourne NULL, donc le message d'erreur est affiché,https://i.postimg.cc/T2C8HdY4/Question2.png
Que va afficher ce code ?,Bonjour Marie,Erreur de conversion,Rien,Erreur de segmentation,Bonjour Marie,https://i.postimg.cc/9Fn6CL9P/Question3.png
Quel est le comportement du code ?,Crash ou comportement indéfini,Retourne 15,Erreur de compilation,Affiche un pointeur,Crash ou comportement indéfini,https://i.postimg.cc/CxWs4QBK/Question4.png
Que représente un conteneur dans le contexte de la virtualisation ?,Un environnement isolé basé sur l’OS hôte,Une VM complète,Une application serveur,Un exécutable indépendant,Un fichier binaire,Un environnement isolé basé sur l’OS hôte,none
Quelles sont les différences entre VM et conteneur ?,Les conteneurs partagent le noyau,L’empreinte mémoire est plus faible pour les conteneurs,Les VMs sont plus rapides,Les conteneurs sont plus portables,Les VMs n’ont pas besoin d’OS hôte,Les conteneurs partagent le noyau;L’empreinte mémoire est plus faible pour les conteneurs;Les conteneurs sont plus portables,none
Que contient typiquement un Dockerfile ?,FROM,RUN,COPY,EXPOSE,TOUCH,FROM;RUN;COPY;EXPOSE,none
Quelle commande permet de lancer un conteneur à partir d’une image ?,docker run,docker exec,docker build,docker start,docker create,docker run,none
Que permet `docker ps` ?,Lister les conteneurs actifs,Lister les images,Lister les ports,Lister les fichiers d’une image,Lancer un conteneur,Lister les conteneurs actifs,none
Comment persister les données d’un conteneur Docker ?,Utiliser des volumes,Utiliser bind mounts,Ne pas arrêter le conteneur,Écrire dans /tmp,Utiliser une base de données,Utiliser des volumes;Utiliser bind mounts,none